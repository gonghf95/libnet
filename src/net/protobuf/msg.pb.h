// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#ifndef PROTOBUF_msg_2eproto__INCLUDED
#define PROTOBUF_msg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_2eproto();
void protobuf_AssignDesc_msg_2eproto();
void protobuf_ShutdownFile_msg_2eproto();

class AccountCheck;
class AccountCheckRs;
class AccountCheckToHttpRs;
class RobotState;
class RobotSyncState;
class RobotTestEnd;

enum AccountCheckRs_ReturnCode {
  AccountCheckRs_ReturnCode_ARC_OK = 0,
  AccountCheckRs_ReturnCode_ARC_UNKONWN = 1,
  AccountCheckRs_ReturnCode_ARC_NOT_FOUND_ACCOUNT = 2,
  AccountCheckRs_ReturnCode_ARC_PASSWORD_WRONG = 3,
  AccountCheckRs_ReturnCode_ARC_LOGGING = 4,
  AccountCheckRs_ReturnCode_ARC_TIMEOUT = 5
};
bool AccountCheckRs_ReturnCode_IsValid(int value);
const AccountCheckRs_ReturnCode AccountCheckRs_ReturnCode_ReturnCode_MIN = AccountCheckRs_ReturnCode_ARC_OK;
const AccountCheckRs_ReturnCode AccountCheckRs_ReturnCode_ReturnCode_MAX = AccountCheckRs_ReturnCode_ARC_TIMEOUT;
const int AccountCheckRs_ReturnCode_ReturnCode_ARRAYSIZE = AccountCheckRs_ReturnCode_ReturnCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccountCheckRs_ReturnCode_descriptor();
inline const ::std::string& AccountCheckRs_ReturnCode_Name(AccountCheckRs_ReturnCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccountCheckRs_ReturnCode_descriptor(), value);
}
inline bool AccountCheckRs_ReturnCode_Parse(
    const ::std::string& name, AccountCheckRs_ReturnCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccountCheckRs_ReturnCode>(
    AccountCheckRs_ReturnCode_descriptor(), name, value);
}
// ===================================================================

class AccountCheck : public ::google::protobuf::Message {
 public:
  AccountCheck();
  virtual ~AccountCheck();

  AccountCheck(const AccountCheck& from);

  inline AccountCheck& operator=(const AccountCheck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountCheck& default_instance();

  void Swap(AccountCheck* other);

  // implements Message ----------------------------------------------

  AccountCheck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountCheck& from);
  void MergeFrom(const AccountCheck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:Proto.AccountCheck)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password();
  inline void clear_has_password();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* account_;
  ::std::string* password_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static AccountCheck* default_instance_;
};
// -------------------------------------------------------------------

class AccountCheckRs : public ::google::protobuf::Message {
 public:
  AccountCheckRs();
  virtual ~AccountCheckRs();

  AccountCheckRs(const AccountCheckRs& from);

  inline AccountCheckRs& operator=(const AccountCheckRs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountCheckRs& default_instance();

  void Swap(AccountCheckRs* other);

  // implements Message ----------------------------------------------

  AccountCheckRs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountCheckRs& from);
  void MergeFrom(const AccountCheckRs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AccountCheckRs_ReturnCode ReturnCode;
  static const ReturnCode ARC_OK = AccountCheckRs_ReturnCode_ARC_OK;
  static const ReturnCode ARC_UNKONWN = AccountCheckRs_ReturnCode_ARC_UNKONWN;
  static const ReturnCode ARC_NOT_FOUND_ACCOUNT = AccountCheckRs_ReturnCode_ARC_NOT_FOUND_ACCOUNT;
  static const ReturnCode ARC_PASSWORD_WRONG = AccountCheckRs_ReturnCode_ARC_PASSWORD_WRONG;
  static const ReturnCode ARC_LOGGING = AccountCheckRs_ReturnCode_ARC_LOGGING;
  static const ReturnCode ARC_TIMEOUT = AccountCheckRs_ReturnCode_ARC_TIMEOUT;
  static inline bool ReturnCode_IsValid(int value) {
    return AccountCheckRs_ReturnCode_IsValid(value);
  }
  static const ReturnCode ReturnCode_MIN =
    AccountCheckRs_ReturnCode_ReturnCode_MIN;
  static const ReturnCode ReturnCode_MAX =
    AccountCheckRs_ReturnCode_ReturnCode_MAX;
  static const int ReturnCode_ARRAYSIZE =
    AccountCheckRs_ReturnCode_ReturnCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ReturnCode_descriptor() {
    return AccountCheckRs_ReturnCode_descriptor();
  }
  static inline const ::std::string& ReturnCode_Name(ReturnCode value) {
    return AccountCheckRs_ReturnCode_Name(value);
  }
  static inline bool ReturnCode_Parse(const ::std::string& name,
      ReturnCode* value) {
    return AccountCheckRs_ReturnCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 return_code = 1;
  inline bool has_return_code() const;
  inline void clear_return_code();
  static const int kReturnCodeFieldNumber = 1;
  inline ::google::protobuf::int32 return_code() const;
  inline void set_return_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Proto.AccountCheckRs)
 private:
  inline void set_has_return_code();
  inline void clear_has_return_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 return_code_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static AccountCheckRs* default_instance_;
};
// -------------------------------------------------------------------

class AccountCheckToHttpRs : public ::google::protobuf::Message {
 public:
  AccountCheckToHttpRs();
  virtual ~AccountCheckToHttpRs();

  AccountCheckToHttpRs(const AccountCheckToHttpRs& from);

  inline AccountCheckToHttpRs& operator=(const AccountCheckToHttpRs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountCheckToHttpRs& default_instance();

  void Swap(AccountCheckToHttpRs* other);

  // implements Message ----------------------------------------------

  AccountCheckToHttpRs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountCheckToHttpRs& from);
  void MergeFrom(const AccountCheckToHttpRs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 return_code = 1;
  inline bool has_return_code() const;
  inline void clear_return_code();
  static const int kReturnCodeFieldNumber = 1;
  inline ::google::protobuf::int32 return_code() const;
  inline void set_return_code(::google::protobuf::int32 value);

  // required string account = 2;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 2;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // @@protoc_insertion_point(class_scope:Proto.AccountCheckToHttpRs)
 private:
  inline void set_has_return_code();
  inline void clear_has_return_code();
  inline void set_has_account();
  inline void clear_has_account();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* account_;
  ::google::protobuf::int32 return_code_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static AccountCheckToHttpRs* default_instance_;
};
// -------------------------------------------------------------------

class RobotState : public ::google::protobuf::Message {
 public:
  RobotState();
  virtual ~RobotState();

  RobotState(const RobotState& from);

  inline RobotState& operator=(const RobotState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotState& default_instance();

  void Swap(RobotState* other);

  // implements Message ----------------------------------------------

  RobotState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RobotState& from);
  void MergeFrom(const RobotState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Proto.RobotState)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* account_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static RobotState* default_instance_;
};
// -------------------------------------------------------------------

class RobotSyncState : public ::google::protobuf::Message {
 public:
  RobotSyncState();
  virtual ~RobotSyncState();

  RobotSyncState(const RobotSyncState& from);

  inline RobotSyncState& operator=(const RobotSyncState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotSyncState& default_instance();

  void Swap(RobotSyncState* other);

  // implements Message ----------------------------------------------

  RobotSyncState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RobotSyncState& from);
  void MergeFrom(const RobotSyncState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Proto.RobotState states = 1;
  inline int states_size() const;
  inline void clear_states();
  static const int kStatesFieldNumber = 1;
  inline const ::Proto::RobotState& states(int index) const;
  inline ::Proto::RobotState* mutable_states(int index);
  inline ::Proto::RobotState* add_states();
  inline const ::google::protobuf::RepeatedPtrField< ::Proto::RobotState >&
      states() const;
  inline ::google::protobuf::RepeatedPtrField< ::Proto::RobotState >*
      mutable_states();

  // @@protoc_insertion_point(class_scope:Proto.RobotSyncState)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Proto::RobotState > states_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static RobotSyncState* default_instance_;
};
// -------------------------------------------------------------------

class RobotTestEnd : public ::google::protobuf::Message {
 public:
  RobotTestEnd();
  virtual ~RobotTestEnd();

  RobotTestEnd(const RobotTestEnd& from);

  inline RobotTestEnd& operator=(const RobotTestEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotTestEnd& default_instance();

  void Swap(RobotTestEnd* other);

  // implements Message ----------------------------------------------

  RobotTestEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RobotTestEnd& from);
  void MergeFrom(const RobotTestEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Proto.RobotTestEnd)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static RobotTestEnd* default_instance_;
};
// ===================================================================


// ===================================================================

// AccountCheck

// required string account = 1;
inline bool AccountCheck::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountCheck::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountCheck::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountCheck::clear_account() {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& AccountCheck::account() const {
  // @@protoc_insertion_point(field_get:Proto.AccountCheck.account)
  return *account_;
}
inline void AccountCheck::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set:Proto.AccountCheck.account)
}
inline void AccountCheck::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set_char:Proto.AccountCheck.account)
}
inline void AccountCheck::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Proto.AccountCheck.account)
}
inline ::std::string* AccountCheck::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Proto.AccountCheck.account)
  return account_;
}
inline ::std::string* AccountCheck::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AccountCheck::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.AccountCheck.account)
}

// required string password = 2;
inline bool AccountCheck::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccountCheck::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccountCheck::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccountCheck::clear_password() {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& AccountCheck::password() const {
  // @@protoc_insertion_point(field_get:Proto.AccountCheck.password)
  return *password_;
}
inline void AccountCheck::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set:Proto.AccountCheck.password)
}
inline void AccountCheck::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set_char:Proto.AccountCheck.password)
}
inline void AccountCheck::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Proto.AccountCheck.password)
}
inline ::std::string* AccountCheck::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Proto.AccountCheck.password)
  return password_;
}
inline ::std::string* AccountCheck::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AccountCheck::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.AccountCheck.password)
}

// -------------------------------------------------------------------

// AccountCheckRs

// required int32 return_code = 1;
inline bool AccountCheckRs::has_return_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountCheckRs::set_has_return_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountCheckRs::clear_has_return_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountCheckRs::clear_return_code() {
  return_code_ = 0;
  clear_has_return_code();
}
inline ::google::protobuf::int32 AccountCheckRs::return_code() const {
  // @@protoc_insertion_point(field_get:Proto.AccountCheckRs.return_code)
  return return_code_;
}
inline void AccountCheckRs::set_return_code(::google::protobuf::int32 value) {
  set_has_return_code();
  return_code_ = value;
  // @@protoc_insertion_point(field_set:Proto.AccountCheckRs.return_code)
}

// -------------------------------------------------------------------

// AccountCheckToHttpRs

// required int32 return_code = 1;
inline bool AccountCheckToHttpRs::has_return_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountCheckToHttpRs::set_has_return_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountCheckToHttpRs::clear_has_return_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountCheckToHttpRs::clear_return_code() {
  return_code_ = 0;
  clear_has_return_code();
}
inline ::google::protobuf::int32 AccountCheckToHttpRs::return_code() const {
  // @@protoc_insertion_point(field_get:Proto.AccountCheckToHttpRs.return_code)
  return return_code_;
}
inline void AccountCheckToHttpRs::set_return_code(::google::protobuf::int32 value) {
  set_has_return_code();
  return_code_ = value;
  // @@protoc_insertion_point(field_set:Proto.AccountCheckToHttpRs.return_code)
}

// required string account = 2;
inline bool AccountCheckToHttpRs::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccountCheckToHttpRs::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccountCheckToHttpRs::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccountCheckToHttpRs::clear_account() {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& AccountCheckToHttpRs::account() const {
  // @@protoc_insertion_point(field_get:Proto.AccountCheckToHttpRs.account)
  return *account_;
}
inline void AccountCheckToHttpRs::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set:Proto.AccountCheckToHttpRs.account)
}
inline void AccountCheckToHttpRs::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set_char:Proto.AccountCheckToHttpRs.account)
}
inline void AccountCheckToHttpRs::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Proto.AccountCheckToHttpRs.account)
}
inline ::std::string* AccountCheckToHttpRs::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Proto.AccountCheckToHttpRs.account)
  return account_;
}
inline ::std::string* AccountCheckToHttpRs::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AccountCheckToHttpRs::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.AccountCheckToHttpRs.account)
}

// -------------------------------------------------------------------

// RobotState

// required string account = 1;
inline bool RobotState::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotState::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotState::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotState::clear_account() {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& RobotState::account() const {
  // @@protoc_insertion_point(field_get:Proto.RobotState.account)
  return *account_;
}
inline void RobotState::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set:Proto.RobotState.account)
}
inline void RobotState::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set_char:Proto.RobotState.account)
}
inline void RobotState::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Proto.RobotState.account)
}
inline ::std::string* RobotState::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Proto.RobotState.account)
  return account_;
}
inline ::std::string* RobotState::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RobotState::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.RobotState.account)
}

// required int32 state = 2;
inline bool RobotState::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotState::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotState::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotState::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 RobotState::state() const {
  // @@protoc_insertion_point(field_get:Proto.RobotState.state)
  return state_;
}
inline void RobotState::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Proto.RobotState.state)
}

// -------------------------------------------------------------------

// RobotSyncState

// repeated .Proto.RobotState states = 1;
inline int RobotSyncState::states_size() const {
  return states_.size();
}
inline void RobotSyncState::clear_states() {
  states_.Clear();
}
inline const ::Proto::RobotState& RobotSyncState::states(int index) const {
  // @@protoc_insertion_point(field_get:Proto.RobotSyncState.states)
  return states_.Get(index);
}
inline ::Proto::RobotState* RobotSyncState::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:Proto.RobotSyncState.states)
  return states_.Mutable(index);
}
inline ::Proto::RobotState* RobotSyncState::add_states() {
  // @@protoc_insertion_point(field_add:Proto.RobotSyncState.states)
  return states_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Proto::RobotState >&
RobotSyncState::states() const {
  // @@protoc_insertion_point(field_list:Proto.RobotSyncState.states)
  return states_;
}
inline ::google::protobuf::RepeatedPtrField< ::Proto::RobotState >*
RobotSyncState::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:Proto.RobotSyncState.states)
  return &states_;
}

// -------------------------------------------------------------------

// RobotTestEnd

// required int32 state = 1;
inline bool RobotTestEnd::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotTestEnd::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotTestEnd::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotTestEnd::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 RobotTestEnd::state() const {
  // @@protoc_insertion_point(field_get:Proto.RobotTestEnd.state)
  return state_;
}
inline void RobotTestEnd::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Proto.RobotTestEnd.state)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Proto::AccountCheckRs_ReturnCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Proto::AccountCheckRs_ReturnCode>() {
  return ::Proto::AccountCheckRs_ReturnCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_2eproto__INCLUDED
